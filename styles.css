/*
                               <\              _
                                \\          _/{
                         _       \\       _-   -_
                       /{        / `\   _-     - -_
                     _~  =      ( @  \ -        -  -_
                   _- -   ~-_   \( =\ \           -  -_
                 _~  -       ~_ | 1 :\ \      _-~-_ -  -_
               _-   -          ~  |V: \ \  _-~     ~-_-  -_
            _-~   -            /  | :  \ \            ~-_- -_
         _-~    -   _.._      {   | : _-``               ~- _-_
      _-~   -__..--~    ~-_  {   : \:}    --- hi h8rs
    =~__.--~~              ~-_\  :  /
                               \ : /__
                              //`Y'--\\
                             <+       \\
                              \\      WWW
                              MMM        TIME TO NOT SUCK! */

html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0; /* Resets the margin and padding. */
}  /* border-box lets an element width and height not be affected by padding or borders this is best practice. https://css-tricks.com/box-sizing/*/
body {
    background: teal;
    color: #fff;
    /*padding-bottom: 10%;*/ /* not sure why this was here */
}
h1, h3 {
  text-align: center;
  margin: 10% 0 5%; /* percentages for responsive design */
  font-family: verdana;
  font-weight: 100;
  animation-duration: 3s;
  animation-name: slidein;
}

/*
                                 .       .
                                / `.   .' \
                        .---.  <    > <    >  .---.
                        |    \  \ - ~ ~ - /  /    |
                         ~-..-~             ~-..-~
                     \~~~\.'                    `./~~~/
                      \__/                        \__/
                       /                  .-    .  \
                _._ _.-    .-~ ~-.       /       }   \/~~~/
            _.-'q  }~     /       }     {        ;    \__/
 ANIMATE-- {'__,  /      (       /      {       /      `. ,~~|   .     .
  THIS!     `''''='~~-.__(      /_      |      /- _      `..-'   \\   //
                        / \   =/  ~~--~~{    ./|    ~-.     `-..__\\_//_.-'
                       {   \  +\         \  =\ (        ~ - . _ _ _..---~
                       |  | {   }         \   \_\
                      '---.o___,'       .o___,      INTRO TO CSS ANIMATION */

.box {
  height: 100px;
  width: 100px;
  background-color: red;
  transition-property: background-color;
  transition-duration: 1s;
  /*margin: 0 auto;*/
}
.box: hover {
  height: 100px;
  width: 100px;
  background-color: blue;
}
#color, #circle {
  width: 100%;
  text-align: center;
}
.square {
	width: 250px;
	height: 250px;
	margin: 1rem 0 2rem 1rem;
	background-color: blue;
  display: inline-block;;
  border-radius: 2%
}

/* Blue to green */
#color .square {
  transition-duration: 2s;
}

#color .square:hover {
  background-color: green;
}

/* Square to circle */
#circle .square {
transition: border-radius 1s 2s, background-color 2s 1s;
}

#circle .square:hover {
  border-radius: 50%;
  background-color: purple;
}

@keyframes slidein {
  from {
    margin-left: 100%;
    width: 300%;
  }
  to {
    margin-left: 0%;
    width: 100%;
  }
}

/*
                       _..--+~/@-~--.
                   _-=~      (  .   '
                _-~     _.--=.\ \'''' --- INPUT RADIO HAD ME LIKE...
              _~      _-       \ \_\
             =      _=          '--'
            '      =                             .
           :      :       ____                   '=_. ___
      ___  |      ;                            ____ '~--.~.
           ;      ;                               _____  } |
        ___=       \ ___ __     __..-...__           ___/__/__
           :        =_     _.-~~          ~~--.__
      _____ \         ~-+-~                   ___~=_______
           ~@#~~ == ...______ __ ___ _--~~--_                  CSS ONLY INPUT RADIO ANIMATION
*/

#radios {
    position: relative;
    width: 50%;
    margin: 0 auto; /* top: 0, right: auto, bottom: 0, left: auto */
}
input[type="radio"] {
    position: absolute;
    right: 1000%; /* takes the default input dots off the view */
}
label {
    float: left;
    width: 15%; /* set's the width of the radio */
    padding-bottom: 15%;
    margin: 0 2.5%;
    background: rgba(255, 255, 255, .2);
    border-radius: 50%;
    cursor: pointer;
}
#slider {
    position: absolute;
    left: 0%;
    top: 0;
    width: 10%;
    padding-bottom: 10%;
    margin: 2.5% 0 0 5%;
    background: #fff;
    transition: transform 15s;
    border-radius: 50%;
    animation-timing-function: ease-in-out;
    animation-duration: .3s;
    animation-fill-mode: forwards;
    transition-property: left; /* used to specify the names of CSS properties to which a transition effect should be applied */
    transition-duration: 0.2s; /* specifies the number of seconds or milliseconds a transition animation should take to complete. */
    transition-timing-function: ease-in-out; /* lets you establish an acceleration curve options: ease, ease-in, ease-out, ease-in-out, linear, step-start, step-end, steps(4, end), cubic-bezier(0.1, 0.7, 1.0, 0.1)*/
    transition-delay: .05s; /* Amount of time to wait between transitions and the start of the effect */
    /*transition: 0.2s left .05s ease-in-out;*/ /* or you can do this */
}
#input1:checked~ #slider {
    animation-name: input1;
    left: 0;
} /* :checked CSS pseudo-class that is checked or toggled to an on state. ~ (tilda) #slider mathces all sliders elements that are siblings of checked http://stackoverflow.com/questions/10782054/what-does-the-tilde-squiggle-twiddle-css-selector-mean */
#input2:checked~ #slider {
    animation-name: input2;

    left: 20%; /* 20% over to the left of input1 */
}
#input3:checked~ #slider {
    animation-name: input3;
    left: 40%;
}
#input4:checked~ #slider {
    animation-name: input4;
    left: 60%;
}
#input5:checked~ #slider {
    animation-name: input5;
    left: 80%;
}
@keyframes input1 {
    .2%, .5% {
        transform: scale(0.5);
    }
} /* input1 is the animation-name: input1 we declared earlier. 30%, 70% is the starting and ending states of the animation. It's required and if it's not incuded it will be ignored by the parser https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes */
@keyframes input2 {
    .2%, .5% {
        transform: scale(0.5);
    }
}
@keyframes input3 {
    .2%, .5% {
        transform: scale(0.5);
    }
}
@keyframes input4 {
    .2%, .5% {
        transform: scale(0.5);
    }
}
@keyframes input5 {
    .2%, .5% {
        transform: scale(0.5);
    }
}

/*
                                                          .--.__
                                                      .~ (@)  ~~~---_
                                                     {     `-_~,,,,,,)
                                                     {    (_  ',       ---- such wow!
                                                      ~    . = _',
                                                       ~-   '.  =-'
                                                         ~     :
      .                                             _,.-~     ('');
      '.                                         .-~        \  \ ;
        ':-_                                _.--~            \  \;      _-=,.
          ~-:-.__                       _.-~                 {  '---- _'-=,.
             ~-._~--._             __.-~                     ~---------=,.`
                 ~~-._~~-----~~~~~~       .+++~~~~~~~~-__   /
                      ~-.,____           {   -     +   }  _/
                              ~~-.______{_    _ -=\ / /_.~
                                   :      ~--~    // /         ..-
                                   :   / /      // /         ((
                                   :  / /      {   `-------,. ))
                                   :   /        ''=--------. }o
                      .=._________,'  )                     ))
                      )  _________ -''                     ~~
                     / /  _ _
                    (_.-.'O'-'.        FLIPPING PICTURES  */



#containerthingy {
  margin-top: 250px;
  margin-bottom: 150px;
}
.album_container {
  position: relative;
  margin: 10px auto;
  width: 250px;
  height: 250px;
  perspective: 1000px;
}

.picture {
  width: 100%;
  height: 100%;
  box-shadow: -5px 5px 5px #aaa;
  transform-style: preserve-3d;
  transition: all 1.0s linear;
}

.front {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 2;
  backface-visibility: hidden;
  transform: rotateY(0deg);
}

.back {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 10px;
  color: white;
  text-align: center;
  background-color: #aaa;
  transform: rotateY(180deg);
}


.album_container:hover .picture {
  transform: rotateY(180deg);
}
